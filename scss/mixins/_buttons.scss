// Button variants
//

@mixin button-flat-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: transparent;

  &:hover {
    color: $color;
    background-color: darken($body-bg, 10%);
    border-color: transparent;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $grey;
    background-color: transparent;
    &:hover {
      background-color: darken($body-bg, 5%);
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

@mixin button-raised-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: color-yiq($color);
  background-color: $color;
  background-image: none;
  border-color: $color;

  &:hover {
    $active-background-modified: null;
    @if (detect-color-contrast($active-background) == 'dark') {
      $active-background-modified: darken($active-background, $highlight-modifier-dark);
    } @else {
      $active-background-modified: lighten($active-background, $highlight-modifier-light);
    }
    color: color-yiq($active-background-modified);
    border-color: $active-border;
    background-color: $active-background-modified;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $grey;
    background-color: transparent;
    border-color: transparent;

    &:hover {
      color: $grey-100;
      background-color: $color;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}